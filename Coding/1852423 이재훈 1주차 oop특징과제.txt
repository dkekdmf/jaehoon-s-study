1. 캡슐화
서로 관련되어 있는 데이터, 메소드등을  묶고, 객체를 캡슐로 싸서 
객체의 내부를 보호하는 것이다. 마치 감기약을 캡슐로 싸서 가루들이 날아가지 못하도록
하는 것과 동일하다. 외부의 잘못된 사용으로 객체가 손상되지 않도록 한다.

2. 상속
상속은 기존의 코드를 재활용하기 위한 기법으로 이미 작성된 클래스(부모 클래스)를 이어받아서 새로운 클래스(자식 클래스)를 생성하는 기법이다. 반복된 코드의 중복을 줄여주고
유지 보수의 편리성을 제공해준다. 그리고, 상속을 사용하여 다른 사람의 클래스를 상속받은 후에 자신이 필요한 부분을 변경하여서 사용할 수 있다. 자바에서는 extends를 사용했지만, C++은 콜론을 사용한다. 자바는 단일상속 이지만, C++은 다중상속을 지원한다.

3. 다형성
다형성은 같은 타입이지만, 실행 결과가 다양한 객체를 대입할 수 있는 성질을 말한다.
다형성을 사용하게 되면 실제 동작은 다르더라도 개념적으로 동일한 작업을 하는
멤버 함수에게 똑같은 이름을 부여할 수 있으므로 코드가 더 간단해진다. 연산자 중복, 
함수 중복, 함수 재정의등이 해당된다.